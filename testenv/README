1. How to test all of the sql:
# use generate_four_data scripts to generate your test data:
$ ./testenv/generate_four_dataset.sh

#First create you own table and load records to your table
$ rlwrap mclient -u monetdb < create_table.sql

# If you want to test time of all the commands:
rlwrap mclient -u monetdb --interactive=ms -e < test.sql > result.csv

#The above result will generate result to results.csv
python parse_result.py

#This code will extract information from result.csv to parse.txt

2. How to load data to MonetDB:
$ mclient -u monetdb
$ create table regextest (id INT, name VARCHAR(1000));
$ COPY INTO regextest FROM '/home/xzhang3/pattern_match_datasets/10M.txt' USING DELIMITERS '|','\n';

3. How to generate test record:
# If there is no binary file of generate_input, first you need to compile it:
$ cd string-generator
$ make
$ ./generate_input --input-file dataJun7-2016-clean.csv --string-len 64 --num-string 10000000 --selectivity 0.2

4. How to improve the performance of hyperscan:
  1) force the hyperscan running on one cpu
  $ sudo numactl --cpunodebind=0 /usr/local/bin/mserver5 --set gdk_nr_threads=10

5. How to make regex run:
  go to regex folder and run make
  $ sudo cp libregex.so /usr/local/lib/
  $ export LIBS="-lhs -lre2 -lregex"

6. How to install re2 and merge into MonetDB:
  since re2 is written in C++, we need to use their wrapper function cre2:
  https://github.com/marcomaggi/cre2
  $ cd cre2
  $ sh autogen.sh
  $ mkdir build
  $ cd build
  $ ../configure
  $ make
  $ make check
  $ make install
  $ sudo vim /etc/ld.so.conf
  $ add /usr/local/lib/cre2
  $ export LIBS="-lhs -lre2 -lregex -lcre2"

